syntax = "proto2";

package stremio.core.runtime;

option java_package = "com.stremio.core.runtime.msg";

import "stremio/core/types/profile.proto";
import "stremio/core/types/auth_request.proto";

message Event {
  oneof type {
    ProfilePushedToStorage profile_pushed_to_storage = 1;
    LibraryItemsPushedToStorage library_items_pushed_to_storage = 2;
    StreamsPushedToStorage streams_pushed_to_storage = 3;
    NotificationsPushedToStorage notifications_pushed_to_storage = 4;
    UserPulledFromAPI user_pulled_from_api = 5;
    UserPushedToAPI user_pushed_to_api = 6;
    AddonsPulledFromAPI addons_pulled_from_api = 7;
    AddonsPushedToAPI addons_pushed_to_api = 8;
    LibrarySyncWithAPIPlanned library_sync_with_api_planned = 9;
    LibraryItemsPushedToAPI library_items_pushed_to_api = 10;
    LibraryItemsPulledFromAPI library_items_pulled_from_api = 11;
    UserAuthenticated user_authenticated = 12;
    UserLoggedOut user_logged_out = 13;
    SessionDeleted session_deleted = 14;
    TraktAddonFetched trakt_addon_fetched = 15;
    TraktLoggedOut trakt_logged_out = 16;
    AddonInstalled addon_installed = 17;
    AddonUpgraded addon_upgraded = 18;
    AddonUninstalled addon_uninstalled = 19;
    SettingsUpdated settings_updated = 20;
    LibraryItemAdded library_item_added = 21;
    LibraryItemRemoved library_item_removed = 22;
    LibraryItemRewinded library_item_rewinded = 23;
    LibraryItemNotificationsToggled library_item_notifications_toggled = 24;
    NotificationsDismissed notifications_dismissed = 25;
    PlayerPlaying player_playing = 26;
    PlayerStopped player_stopped = 27;
    PlayerEnded player_ended = 28;
    TraktPlaying trakt_playing = 29;
    TraktPaused trakt_paused = 30;
    MagnetParsed magnet_parsed = 31;
    TorrentParsed torrent_parsed = 32;
    PlayingOnDevice playing_on_device = 33;
    Error error = 100;
  }

  message ProfilePushedToStorage {
    optional string uid = 1;
  }
  message LibraryItemsPushedToStorage {
    repeated string ids = 1;
  }
  message StreamsPushedToStorage {
    optional string uid = 1;
  }
  message NotificationsPushedToStorage {
    repeated string ids = 1;
  }
  message UserPulledFromAPI {
    optional string uid = 1;
  }
  message UserPushedToAPI {
    optional string uid = 1;
  }
  message AddonsPulledFromAPI {
    repeated string transport_urls = 1;
  }
  message AddonsPushedToAPI {
    repeated string transport_urls = 1;
  }
  message LibrarySyncWithAPIPlanned {
    optional string uid = 1;
    required PlanPair plan = 2;
  }
  message LibraryItemsPushedToAPI {
    repeated string ids = 1;
  }
  message LibraryItemsPulledFromAPI {
    repeated string ids = 1;
  }
  message UserAuthenticated {
    required stremio.core.types.AuthRequest auth_request = 1;
  }
  message UserLoggedOut {
    optional string uid = 1;
  }
  message SessionDeleted {
    required string auth_key = 1;
  }
  message TraktAddonFetched {
    optional string uid = 1;
  }
  message TraktLoggedOut {
    optional string uid = 1;
  }
  message AddonInstalled {
    required string transport_url = 1;
    required string id = 2;
  }
  message AddonUpgraded {
    required string transport_url = 1;
    required string id = 2;
  }
  message AddonUninstalled {
    required string transport_url = 1;
    required string id = 2;
  }
  message SettingsUpdated {
    required stremio.core.types.Profile.Settings settings = 1;
  }
  message LibraryItemAdded {
    required string id = 1;
  }
  message LibraryItemRemoved {
    required string id = 1;
  }
  message LibraryItemRewinded {
    required string id = 1;
  }
  message LibraryItemNotificationsToggled {
    required string id = 1;
  }
  message NotificationsDismissed {
    required string id = 1;
  }
  message PlayerPlaying {
    // Empty
  }
  message PlayerStopped {
    // Empty
  }
  message PlayerEnded {
    // Empty
  }
  message TraktPlaying {
    // Empty
  }
  message TraktPaused {
    // Empty
  }
  message MagnetParsed {
    required string magnet = 1;
  }
  message TorrentParsed {
    required bytes torrent = 1;
  }
  message PlayingOnDevice {
    required string device = 1;
  }
  message Error {
    required string error = 1;
    required Event source = 2;
  }
}

message PlanPair {
  repeated string first = 1;
  repeated string second = 2;
}